# Generated by Django 4.1.13 on 2024-02-01 19:32

import EGT.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomPermissions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("add_employee", "can add employee to enterprise"),
                    ("assign_goal_to_employee", "can assign goal to employee"),
                    ("suspend_employee", "can suspend employee"),
                    ("activate_employee", "can activate employee"),
                    ("report_employee", "can report employee"),
                    ("validate_report", "can validate report"),
                ),
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Enterprise",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(default="some text", max_length=100, unique=True),
                ),
                ("country", models.CharField(default="some text", max_length=100)),
                ("city", models.CharField(default="some text", max_length=100)),
                ("location", models.CharField(default="some text", max_length=100)),
                (
                    "code",
                    models.CharField(default="some text", max_length=20, unique=True),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="enterprise_logos"
                    ),
                ),
                ("dateOfRegistration", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, "Active"), (2, "Deactivated"), (3, "Suspend")],
                        default=1,
                    ),
                ),
                (
                    "admin_salary",
                    models.DecimalField(decimal_places=3, default=0.0, max_digits=10),
                ),
                (
                    "fund",
                    models.DecimalField(decimal_places=3, default=0.0, max_digits=10),
                ),
            ],
            options={
                "db_table": "Enterprise",
                "permissions": (
                    ("add_admin", "can add enterprise administrator"),
                    ("suspend_pdg", "can suspend the founder of the enterprise"),
                    ("activate_pdg", "can activate the pdg of the enterprise"),
                ),
            },
        ),
        migrations.CreateModel(
            name="MyUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMINISTRATOR", "Administrator"),
                            ("EMPLOYEE", "Employee"),
                        ],
                        max_length=15,
                        verbose_name="user role",
                    ),
                ),
                (
                    "picture",
                    models.ImageField(blank=True, null=True, upload_to="user_pict"),
                ),
                (
                    "cv",
                    models.FileField(
                        blank=True, null=True, storage=True, upload_to="user_cv"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    EGT.models.LowerCaseEmailField(
                        error_messages={
                            "unique": "A user with that email already exists."
                        },
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "recovery_email",
                    EGT.models.LowerCaseEmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Recovery Email Address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether this user has completed the email verification process to allow login.",
                        verbose_name="verified",
                    ),
                ),
                (
                    "is_administrator",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Designates whether this user should be treated as an administrator. ",
                        verbose_name="user is administrator",
                    ),
                ),
                (
                    "is_employee",
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text="Designates whether this user should be treated as an employee. ",
                        verbose_name="user is employee",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, "Active"), (2, "Deactivated"), (3, "Suspend")],
                        default=1,
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("records", models.JSONField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
        ),
        migrations.CreateModel(
            name="AdministratorProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                        to_field="email",
                    ),
                ),
                ("enterprises_status", models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="EmployeeProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("categories", models.JSONField(blank=True, null=True)),
                (
                    "total_salary",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=10, null=True
                    ),
                ),
                ("user_enterprise_code", models.JSONField(blank=True, null=True)),
                ("enterprises_status", models.JSONField(blank=True, null=True)),
                ("user_enterprise_salary", models.JSONField(blank=True, null=True)),
                ("completion_bonus", models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserRecords",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField(auto_now_add=True)),
                (
                    "action_type",
                    models.IntegerField(
                        choices=[
                            (0, "UNKNOWN"),
                            (1, "ADD"),
                            (2, "DEACTIVATE"),
                            (3, "SUSPEND"),
                            (4, "REMOVE"),
                            (5, "UPDATE"),
                            (6, "WITHDRAW"),
                            (7, "DEPOSIT"),
                            (8, "TRANSFER"),
                        ]
                    ),
                ),
                ("related_object", models.CharField(max_length=255, null=True)),
                (
                    "action",
                    models.TextField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="action performed",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="email",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SignupCodeEmployee",
            fields=[
                (
                    "code",
                    models.CharField(
                        max_length=40,
                        primary_key=True,
                        serialize=False,
                        verbose_name="code",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "enterprise_name",
                    models.CharField(max_length=255, verbose_name="enterprise_name"),
                ),
                (
                    "employee_password",
                    models.CharField(max_length=255, verbose_name="employee password"),
                ),
                ("ipaddr", models.GenericIPAddressField(verbose_name="ip address")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SignupCode",
            fields=[
                (
                    "code",
                    models.CharField(
                        max_length=40,
                        primary_key=True,
                        serialize=False,
                        verbose_name="code",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "enterprise_name",
                    models.CharField(max_length=255, verbose_name="enterprise_name"),
                ),
                ("ipaddr", models.GenericIPAddressField(verbose_name="ip address")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PasswordResetCode",
            fields=[
                (
                    "code",
                    models.CharField(
                        max_length=40,
                        primary_key=True,
                        serialize=False,
                        verbose_name="code",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "enterprise_name",
                    models.CharField(max_length=255, verbose_name="enterprise_name"),
                ),
                ("new_password", models.CharField(max_length=255)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailChangeCode",
            fields=[
                (
                    "code",
                    models.CharField(
                        max_length=40,
                        primary_key=True,
                        serialize=False,
                        verbose_name="code",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "enterprise_name",
                    models.CharField(max_length=255, verbose_name="enterprise_name"),
                ),
                (
                    "email",
                    models.EmailField(max_length=255, verbose_name="email address"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="some text", max_length=100)),
                (
                    "salary",
                    models.DecimalField(decimal_places=3, max_digits=10, null=True),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, "Active"), (2, "Deactivated"), (3, "Suspend")]
                    ),
                ),
                (
                    "payment_period",
                    models.IntegerField(
                        choices=[(0, "TASK"), (1, "WEEK"), (2, "MONTH")]
                    ),
                ),
                (
                    "enterprise",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="EGT.enterprise",
                        to_field="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Administrator",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("EGT.myuser",),
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("EGT.myuser",),
        ),
        migrations.AddField(
            model_name="enterprise",
            name="PDG",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="EGT.administrator",
                to_field="email",
            ),
        ),
        migrations.AddField(
            model_name="enterprise",
            name="admins",
            field=models.ManyToManyField(
                blank=True,
                help_text="The admins of the enterprise. this user will get administrator permissions over the enterpriseOnly one admin can be active at time, and can exist if and only if the PDG, is suspended to by the enterprise",
                related_name="admin_set",
                related_query_name="admin",
                to="EGT.administrator",
                verbose_name="admins",
            ),
        ),
        migrations.AddField(
            model_name="enterprise",
            name="employee_admins",
            field=models.ManyToManyField(
                blank=True,
                help_text="Enterprise sub-administrators ",
                related_name="employee_admins_set",
                related_query_name="employee_admins",
                to="EGT.employee",
                verbose_name="employee_admins",
            ),
        ),
        migrations.AddField(
            model_name="enterprise",
            name="employees",
            field=models.ManyToManyField(
                blank=True,
                help_text="Enterprise employees ",
                related_name="employee_set",
                related_query_name="employee",
                to="EGT.employee",
                verbose_name="employees",
            ),
        ),
    ]
